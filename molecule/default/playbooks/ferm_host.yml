---
- name: test module ferm_host
  hosts: all
  gather_facts: false
  become: true
  tags: ferm_host
  tasks:
    ## test internal hosts
    - name: get content of hosts.int
      ansible.builtin.slurp:
        src: /etc/ferm/hosts.int
      register: data
    - name: assert that both internal hosts are absent
      ansible.builtin.assert:
        that:
          - data.content |b64decode is not search('192.168.99.1')
          - data.content |b64decode is not search('192.168.99.2')

    - name: add 1st internal host
      ivansible.base.ferm_host:
        host: 192.168.99.1
        zone: internal
    - name: get content of hosts.int
      ansible.builtin.slurp:
        src: /etc/ferm/hosts.int
      register: data
    - name: assert that only 1st internal host is present
      ansible.builtin.assert:
        that:
          - data.content |b64decode is search('192.168.99.1')
          - data.content |b64decode is not search('192.168.99.2')

    - name: add 2nd internal host
      ivansible.base.ferm_host:
        host: 192.168.99.2
        zone: internal
    - name: get content of hosts.int
      ansible.builtin.slurp:
        src: /etc/ferm/hosts.int
      register: data
    - name: assert that both internal hosts are present
      ansible.builtin.assert:
        that:
          - data.content |b64decode is search('192.168.99.1')
          - data.content |b64decode is search('192.168.99.2')

    - name: remove 1st internal host
      ivansible.base.ferm_host:
        host: 192.168.99.1
        zone: internal
        state: absent
    - name: get content of hosts.int
      ansible.builtin.slurp:
        src: /etc/ferm/hosts.int
      register: data
    - name: assert that only 2nd internal host is present
      ansible.builtin.assert:
        that:
          - data.content |b64decode is not search('192.168.99.1')
          - data.content |b64decode is search('192.168.99.2')

    - name: remove 2nd internal host
      ivansible.base.ferm_host:
        host: 192.168.99.2
        zone: internal
        state: absent
    - name: get content of hosts.int
      ansible.builtin.slurp:
        src: /etc/ferm/hosts.int
      register: data
    - name: assert that both internal hosts are absent
      ansible.builtin.assert:
        that:
          - data.content |b64decode is not search('192.168.99.1')
          - data.content |b64decode is not search('192.168.99.2')

    ## test blocked hosts
    - name: get content of hosts.block
      ansible.builtin.slurp:
        src: /etc/ferm/hosts.block
      register: data
    - name: assert that both blocked hosts are absent
      ansible.builtin.assert:
        that:
          - data.content |b64decode is not search('192.168.99.1')
          - data.content |b64decode is not search('192.168.99.2')

    - name: add 1st blocked host
      ivansible.base.ferm_host:
        host: 192.168.99.1
        zone: blocked
    - name: get content of hosts.block
      ansible.builtin.slurp:
        src: /etc/ferm/hosts.block
      register: data
    - name: assert that only 1st blocked host is present
      ansible.builtin.assert:
        that:
          - data.content |b64decode is search('192.168.99.1')
          - data.content |b64decode is not search('192.168.99.2')

    - name: add 2nd blocked host
      ivansible.base.ferm_host:
        host: 192.168.99.2
        zone: blocked
    - name: get content of hosts.block
      ansible.builtin.slurp:
        src: /etc/ferm/hosts.block
      register: data
    - name: assert that both blocked hosts are present
      ansible.builtin.assert:
        that:
          - data.content |b64decode is search('192.168.99.1')
          - data.content |b64decode is search('192.168.99.2')

    - name: remove 1st blocked host
      ivansible.base.ferm_host:
        host: 192.168.99.1
        zone: blocked
        state: absent
    - name: get content of hosts.block
      ansible.builtin.slurp:
        src: /etc/ferm/hosts.block
      register: data
    - name: assert that only 2nd blocked host is present
      ansible.builtin.assert:
        that:
          - data.content |b64decode is not search('192.168.99.1')
          - data.content |b64decode is search('192.168.99.2')

    - name: remove 2nd blocked host
      ivansible.base.ferm_host:
        host: 192.168.99.2
        zone: blocked
        state: absent
    - name: get content of hosts.block
      ansible.builtin.slurp:
        src: /etc/ferm/hosts.block
      register: data
    - name: assert that both blocked hosts are absent
      ansible.builtin.assert:
        that:
          - data.content |b64decode is not search('192.168.99.1')
          - data.content |b64decode is not search('192.168.99.2')
...
