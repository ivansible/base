---
- name: test module github_release
  hosts: all
  gather_facts: false
  tags: github_release
  tasks:
    - name: test split input
      github_release:
        repo: vagrant-box-osx
        user: ivault
        release: latest
      register: result
    - name: assert
      assert:
        that:
          - result.url == 'https://github.com/ivault/vagrant-box-osx/releases/tag/v0.1.0'
          - result.release == 'v0.1.0'

    - name: test combined repository and split release
      github_release:
        repository: ivault/vagrant-box-osx
        release: v0.1.0
      register: result
    - name: assert
      assert:
        that: result.url == 'https://github.com/ivault/vagrant-box-osx/releases/tag/v0.1.0'

    - name: test combined input
      github_release:
        repo: ivault/vagrant-box-osx:latest
      register: result
    - name: assert
      assert:
        that:
          - result.url == 'https://github.com/ivault/vagrant-box-osx/releases/tag/v0.1.0'
          - result.release == 'v0.1.0'

    - name: test invalid non-latest release (default settings)
      github_release:
        repo: ivault/vagrant-box-osx
        release: v999.99
      register: result
      ignore_errors: true
    - name: assert
      assert:
        that:
          - result is not failed
          - result is changed

    - name: test invalid non-latest release (only_latest is falsy)
      github_release:
        repo: ivault/vagrant-box-osx
        release: v999.99
        only_latest: false
      register: result
      ignore_errors: true
    - name: assert
      assert:
        that:
          - result is failed

    - name: test invalid repository (non-latest release)
      github_release:
        repo: ivault/no-such-repo
        release: v0.1.0
      register: result
      ignore_errors: true
    - name: assert
      assert:
        that:
          - result is not failed
          - result is changed

    - name: test invalid repository (non-latest release, only_latest is falsy)
      github_release:
        repo: ivault/no-such-repo
        release: v0.1.0
        only_latest: false
      register: result
      ignore_errors: true
    - name: assert
      assert:
        that:
          - result is failed

    - name: test invalid repository (latest release)
      github_release:
        repo: ivault/no-such-repo
      register: result
      ignore_errors: true
    - name: assert
      assert:
        that:
          - result is failed

    - name: test without strip 'v'
      github_release:
        repo: ivault/vagrant-box-osx:v0.1.0
        stripv: false
      register: result
    - name: assert
      assert:
        that:
          - result.url == 'https://github.com/ivault/vagrant-box-osx/releases/tag/v0.1.0'
          - result.release == 'v0.1.0'

    - name: test with strip 'v'
      github_release:
        repo: ivault/vagrant-box-osx:v0.1.0
        stripv: true
      register: result
    - name: assert
      assert:
        that:
          - result.url == 'https://github.com/ivault/vagrant-box-osx/releases/tag/v0.1.0'
          - result.release == '0.1.0'

    - name: test url template with 'repo_url' and 'ver'
      github_release:
        repo: ivault/vagrant-box-osx:v0.1.0
        template: "{repo_url}/archive/test_{ver}.zip"
      register: result
    - name: assert
      assert:
        that:
          - result.url == 'https://github.com/ivault/vagrant-box-osx/archive/test_v0.1.0.zip'
          - result.url_repo == 'https://github.com/ivault/vagrant-box-osx'
          - result.url_release == 'https://github.com/ivault/vagrant-box-osx/releases/tag/v0.1.0'

    - name: test url template with 'download_url' and 'ver' (latest release)
      github_release:
        repository: ivault/vagrant-box-osx:latest
        template: "{download_url}/test_{ver}.zip"
      register: result
    - name: assert
      assert:
        that:
          - result.url == 'https://github.com/ivault/vagrant-box-osx/releases/download/v0.1.0/test_v0.1.0.zip'
          - result.url_repo == 'https://github.com/ivault/vagrant-box-osx'
          - result.url_release == 'https://github.com/ivault/vagrant-box-osx/releases/tag/v0.1.0'
          - result.url_download == 'https://github.com/ivault/vagrant-box-osx/releases/download/v0.1.0'

    - name: test url template with 'release_url' and stripped 'ver'
      github_release:
        repo: vagrant-box-osx
        user: ivault
        release: v0.1.0
        template: "{release_url}/test_ver{ver}.zip"
        stripv: true
      register: result
    - name: assert
      assert:
        that:
          - result.url == 'https://github.com/ivault/vagrant-box-osx/releases/tag/v0.1.0/test_ver0.1.0.zip'
          - result.url_repo == 'https://github.com/ivault/vagrant-box-osx'
          - result.url_release == 'https://github.com/ivault/vagrant-box-osx/releases/tag/v0.1.0'
          - result.url_download == 'https://github.com/ivault/vagrant-box-osx/releases/download/v0.1.0'

    - name: test url template with invalid replacement and 'ver'
      github_release:
        repository: ivault/vagrant-box-osx:v0.1.0
        template: "{invalid_url}/test_ver{ver}.zip"
      register: result
    - name: assert
      assert:
        that:
          - result.url == '{invalid_url}/test_verv0.1.0.zip'

    - name: test 'creates' with absent file
      github_release:
        repo: ivault/vagrant-box-osx:v0.1.0
        creates: /no-such-file
      register: result
    - name: assert
      assert:
        that: result is changed

    - name: test 'creates' with existing file
      github_release:
        repo: ivault/vagrant-box-osx:v0.1.0
        creates: /bin/sh
      register: result
    - name: assert
      assert:
        that: result is not changed

    - name: test 'creates' with existing file and reinstall allowed
      github_release:
        repo: ivault/vagrant-box-osx:v0.1.0
        creates: /bin/sh
        reinstall: true
      register: result
    - name: assert
      assert:
        that: result is changed

    - name: test version script with equal version
      github_release:
        repo: ivault/vagrant-box-osx:v0.1.0
        script: "echo 'installed version: v0.1.0' && echo OK"
        regex: "v[0-9][0-9a-z.-]+"
      register: result
    - name: assert
      assert:
        that:
          - result is not changed
          - result.installed == 'v0.1.0'
          - result.release == 'v0.1.0'

    - name: test version script with equal version and reinstall
      github_release:
        repo: ivault/vagrant-box-osx:v0.1.0
        script: "echo 'installed version: v0.1.0' && echo OK"
        regex: "v[0-9][0-9a-z.-]+"
        reinstall: true
      register: result
    - name: assert
      assert:
        that:
          - result is changed
          - result.installed == 'v0.1.0'
          - result.release == 'v0.1.0'
          - "'(forced reinstall)' in result.msg"

    - name: test version script with different version
      github_release:
        repo: ivault/vagrant-box-osx:v0.1.0
        script: "echo 'installed version: v0.1.5' && echo OK"
        regex: "v[0-9][0-9a-z.-]+"
      register: result
    - name: assert
      assert:
        that:
          - result is changed
          - result.installed == 'v0.1.5'
          - result.release == 'v0.1.0'

    - name: test version script with failed script
      github_release:
        repo: ivault/vagrant-box-osx:v0.1.0
        script: "/no-such-program"
      register: result
    - name: assert
      assert:
        that:
          - result is changed
          - result.installed is none
          - result.release == 'v0.1.0'
...
